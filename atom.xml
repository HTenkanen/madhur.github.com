<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Coding it my way</title>
 <link href="http://madhur.co.in/atom.xml" rel="self"/>
 <link href="http://madhur.co.in/blogindex.html/"/>
 <updated>2016-07-31T17:51:18+05:30</updated>
 <id>http://madhur.co.in/blogindex.html</id>
 <author>
   <name>Madhur Ahuja</name>
   <email>ahuja.madhur@gmail.com</email>
 </author>
 
 
 <entry>
   <title>Caching authenticated requests using NGINX</title>
   <link href="http://madhur.co.in/blog/2016/07/31/nginx-cache-authenticated-requests.html"/>
   <updated>2016-07-31T00:00:00+05:30</updated>
   <id>id:/blog/2016/07/31/nginx-cache-authenticated-requests</id>
   <content type="html">&lt;p&gt;To handle the ever increasing load, one of my requirements was to cache the authenticated REST API&amp;#39;s for faster processing and decrease the load on backend servers (&lt;a href=&quot;http://tomcat.apache.org/&quot;&gt;Tomcat&lt;/a&gt; in this case).&lt;/p&gt;

&lt;p&gt;We use &lt;a href=&quot;http://stackoverflow.com/questions/1592534/what-is-token-based-authentication&quot;&gt;Token based authentication&lt;/a&gt; for our REST API&amp;#39;s. That means our REST API&amp;#39;s are esentially &lt;a href=&quot;http://www.tutorialspoint.com/restful/restful_statelessness.htm&quot;&gt;stateless&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use a simple encrypted token passed in a header field, say &lt;code&gt;X-AUTH-TOKEN&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, we have various API&amp;#39;s such as user profile, addresses which return data based on this token passed and I don&amp;#39;t want them to hit our backend servers everytime. Neither I am looking for unnecesarily storing this simply retrieved data in our &lt;a href=&quot;http://redis.io/&quot;&gt;Redis&lt;/a&gt; servers. &lt;/p&gt;

&lt;p&gt;Instead, we can use NGINX to cache these requests. We have a very simple architecture where NGINX acts as a reverse proxy for Tomcat servers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Blog/tt.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Here, every request is intercepted by NGINX and appropriate requests are passed back to Tomcat server. This is done using &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass&quot;&gt;&lt;code&gt;proxy_pass&lt;/code&gt;&lt;/a&gt; directive of NGINX.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;location /name/ {
    proxy_pass http://127.0.0.1/remote/;
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can ask NGINX to cache the request using just two directives: &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_proxy_module.html?&amp;amp;_ga=1.103655616.1528258479.1469009926#proxy_cache_path&quot;&gt;&lt;code&gt;proxy_cache_path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_proxy_module.html?&amp;amp;_ga=1.103655616.1528258479.1469009926#proxy_cache&quot;&gt;&lt;code&gt;proxy_cache&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;proxy_cache_path /path/to/cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m 
use_temp_path=off;


server {
...
    location / {
        proxy_cache my_cache;
        proxy_pass http://my_upstream;
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This sets up the basic caching in NGINX as described &lt;a href=&quot;https://www.nginx.com/blog/nginx-caching-guide/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now comes the fun part, how do we cache the authenticated requests. The key is to understand the What Cache Key Does NGINX use?&lt;/p&gt;

&lt;p&gt;The default keys that NGINX generates is MD5 hash of the following NGINX variables: &lt;code&gt;$scheme$proxy_host$request_uri&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For this sample configuration, the cache key for 
&lt;code&gt;http://www.example.org/profile&lt;/code&gt; is calculated as 
&lt;code&gt;md5(“http://my_upstream:80/profile”)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However, for token based authentiated requests, the cached response of &lt;code&gt;http://www.example.org/profile&lt;/code&gt; will not be differentiated for different users, because the response is generated based on the &lt;code&gt;X-AUTH-TOKEN&lt;/code&gt; field coming in the HTTP headers.&lt;/p&gt;

&lt;p&gt;To solve for this, we simply add the token field as part of &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key&quot;&gt;&lt;code&gt;proxy_cache_key&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;proxy_cache_key &amp;quot;$http_x_auth_token$request_uri&amp;quot;;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will ensure that a new cache copy is created for each request having different &lt;code&gt;X-AUTH-TOKEN&lt;/code&gt; in its header field.&lt;/p&gt;

&lt;p&gt;To verify this, you can print out the key field in the response headers using&lt;/p&gt;

&lt;p&gt;&lt;code&gt;add_header X-Cache-Key  $http_x_auth_token$request_uri;&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Create a couchbase bucket during build of the container</title>
   <link href="http://madhur.co.in/blog/2016/07/07/create-couchbase-bucket-docker.html"/>
   <updated>2016-07-07T00:00:00+05:30</updated>
   <id>id:/blog/2016/07/07/create-couchbase-bucket-docker</id>
   <content type="html">&lt;p&gt;We are using docker to automate the develop environments through &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;docker compose&lt;/a&gt;. We use couchbase heavily in our applications. One problem we faced is that if you boot up the &lt;a href=&quot;https://hub.docker.com/r/couchbase/server/&quot;&gt;docker image of couchbase&lt;/a&gt;, you will have to manually perform the setup process, create buckets and so on.  Performing all of these steps manually and everytime is time consuming and not at all ideal.&lt;/p&gt;

&lt;p&gt;I will show you how we solved this problem and automated these steps through &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/&quot;&gt;Dockerfile&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The key thing here is that Couchbase exposes a set of &lt;a href=&quot;http://docs.couchbase.com/admin/admin/rest-intro.html&quot;&gt;services&lt;/a&gt; to perform each of the operation which can be invoked just after the server start.&lt;/p&gt;

&lt;p&gt;We are using &lt;code&gt;docker-compose&lt;/code&gt; and hence our &lt;code&gt;docker-compose.yml&lt;/code&gt; is as follows:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;couchbase&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;couchbase/&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;8091:8091&lt;/span&gt;
     &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;8092:8092&lt;/span&gt; 
     &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;8093:8093&lt;/span&gt; 
     &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;11210:11210&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Through &lt;code&gt;build: couchbase/&lt;/code&gt;, I am pointing to a couchbase directory which contains our &lt;code&gt;Dockerfile&lt;/code&gt; and a script &lt;code&gt;configure-node.sh&lt;/code&gt; which invokes the REST API endpoints of couchbase.&lt;/p&gt;

&lt;p&gt;Here is the very simplistic &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;FROM couchbase:community-3.1.3

COPY configure-node.sh /opt/couchbase

CMD [&quot;/opt/couchbase/configure-node.sh&quot;]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We use the following script to configure the node.&lt;/p&gt;

&lt;p&gt;All the files are given in this &lt;a href=&quot;https://github.com/madhur/couchbase-docker&quot;&gt;github repo&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -m

/entrypoint.sh couchbase-server &amp;amp;

sleep 60

&lt;span class=&quot;c&quot;&gt;# Setup index and memory quota&lt;/span&gt;
curl -v -X POST http://127.0.0.1:8091/pools/default -d &lt;span class=&quot;nv&quot;&gt;memoryQuota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 -d &lt;span class=&quot;nv&quot;&gt;indexMemoryQuota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300

&lt;span class=&quot;c&quot;&gt;# Setup services&lt;/span&gt;
curl -v http://127.0.0.1:8091/node/controller/setupServices -d &lt;span class=&quot;nv&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;kv%2Cn1ql%2Cindex

&lt;span class=&quot;c&quot;&gt;# Setup credentials&lt;/span&gt;
curl -v http://127.0.0.1:8091/settings/web -d &lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8091 -d &lt;span class=&quot;nv&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Administrator -d &lt;span class=&quot;nv&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;password

&lt;span class=&quot;c&quot;&gt;# Load travel-sample bucket&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#curl -v -u Administrator:password -X POST http://127.0.0.1:8091/sampleBuckets/install -d '[&quot;travel-sample&quot;]'&lt;/span&gt;
curl -X POST -u Administrator:password -d &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;default -d &lt;span class=&quot;nv&quot;&gt;ramQuotaMB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;100 -d &lt;span class=&quot;nv&quot;&gt;authType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;none -d &lt;span class=&quot;nv&quot;&gt;replicaNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 -d &lt;span class=&quot;nv&quot;&gt;proxyPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11215 http://127.0.0.1:8091/pools/default/buckets


curl -X POST -u Administrator:password -d &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;feed -d &lt;span class=&quot;nv&quot;&gt;ramQuotaMB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;100 -d &lt;span class=&quot;nv&quot;&gt;authType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;none -d &lt;span class=&quot;nv&quot;&gt;replicaNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 -d &lt;span class=&quot;nv&quot;&gt;proxyPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11215 http://127.0.0.1:8091/pools/default/buckets


&lt;span class=&quot;c&quot;&gt;# Setup Memory Optimized Indexes&lt;/span&gt;
curl -i -u Administrator:password -X POST http://127.0.0.1:8091/settings/indexes -d &lt;span class=&quot;s1&quot;&gt;'storageMode=memory_optimized'&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Type: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TYPE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, Master: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$COUCHBASE_MASTER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TYPE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;worker&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;sleep 15
  &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;hostname -I&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  couchbase-cli server-add --cluster&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$COUCHBASE_MASTER&lt;/span&gt;:8091 --user Administrator --password password --server-add&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$IP&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# TODO: Hack with the cuts, use jq may be better.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;#KNOWN_NODES=`curl -X POST -u Administrator:password http://$COUCHBASE_MASTER:8091/controller/addNode \&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;#  -d hostname=$IP -d user=Administrator -d password=password -d services=kv,n1ql,index | cut -d: -f2 | cut -d\&quot; -f 2 | sed -e   's/@/%40/g'`&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$AUTO_REBALANCE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Auto Rebalance: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$AUTO_REBALANCE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    sleep 10
    couchbase-cli rebalance -c &lt;span class=&quot;nv&quot;&gt;$COUCHBASE_MASTER&lt;/span&gt;:8091 -u Administrator -p password --server-add&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$IP&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#curl -v -X POST -u Administrator:password http://$COUCHBASE_MASTER:8091/controller/rebalance --data &quot;knownNodes=$KNOWN_NODES&amp;amp;ejectedNodes=&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;;

&lt;span class=&quot;nb&quot;&gt;fg &lt;/span&gt;1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Speeding up Node.js HTTP requests with DNS caching</title>
   <link href="http://madhur.co.in/blog/2016/05/28/nodejs-dns-cache.html"/>
   <updated>2016-05-28T00:00:00+05:30</updated>
   <id>id:/blog/2016/05/28/nodejs-dns-cache</id>
   <content type="html">&lt;p&gt;I recently discovered in one of my projects that results of DNS are not cached by &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;NodeJs&lt;/a&gt;. Caching the results of DNS queries is one of the important things and can dramatically improve the speed and scalability of your application. In our application, we saw the number of HTTP requests jump from 35 to 2500 per seconds which is an almost 100x factor.&lt;/p&gt;

&lt;h2&gt;How to cache results of DNS queries&lt;/h2&gt;

&lt;p&gt;One way could be to use a caching DNS library for Node such as &lt;a href=&quot;https://www.npmjs.com/package/dnscache&quot;&gt;DnsCache&lt;/a&gt;. Once this module is installed via &lt;code&gt;npm install dnscache&lt;/code&gt; , every call to a dns method is first looked into the local cache, in case of cache hit the value from cache is returned, in case of cache miss the original dns call is made and the return value is cached in the local cache.&lt;/p&gt;

&lt;p&gt;It is very similar to GOF Proxy design pattern providing a Cache Proxy.&lt;/p&gt;

&lt;p&gt;The goal of this module is to cache the most used/most recent dns calls, to avoid the network delay and improve the performance.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dns'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dnscache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dnscache'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)({&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;enable&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;ttl&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;cachesize&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;//to use the cached dns either of dnscache or dns can be called. &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//all the methods of dns are wrapped, this one just shows lookup on an example &lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;//will call the wrapped dns &lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dnscache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lookup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'www.yahoo.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//do something with result &lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;//will call the wrapped dns &lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lookup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'www.google.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//do something with result &lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Second way is to cache the results of queries at OS level. This is my preferred way as your application does not have to worry about caching as it is done automatically by OS for you. There are many DNS caching resolvers available such as: &lt;a href=&quot;https://www.isc.org/downloads/bind/&quot;&gt;Bind&lt;/a&gt;, &lt;a href=&quot;http://www.thekelleys.org.uk/dnsmasq/doc.html&quot;&gt;dnsmasq&lt;/a&gt; and &lt;a href=&quot;http://unbound.net/&quot;&gt;unbound&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;How to check if DNS cache is working&lt;/h2&gt;

&lt;p&gt;If you are using the DNS caching resolver such as dnsmasq or unbound, the result of DNS query should be very fast i.e. in order of 1 msec or even 0 msec.&lt;/p&gt;

&lt;p&gt;For example executing &lt;code&gt;dig facebook.com&lt;/code&gt; gives me following output:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dig facebook.com

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.2rc1-RedHat-9.8.2-0.37.rc1.el6_7.7 &amp;lt;&amp;lt;&amp;gt;&amp;gt; facebook.com
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 6468
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;facebook.com.          IN  A

;; ANSWER SECTION:
facebook.com.       300 IN  A   69.171.230.68

;; Query time: 375 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Sat May 28 10:03:26 2016
;; MSG SIZE  rcvd: 46&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here the query time of &lt;code&gt;375 msec&lt;/code&gt; is what we are interested in. That&amp;#39;s way too high. If your DNS caching resolver is working fine, next time you execute this command, its time should be &amp;lt;=1msec. &lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dig facebook.com

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.2rc1-RedHat-9.8.2-0.37.rc1.el6_7.7 &amp;lt;&amp;lt;&amp;gt;&amp;gt; facebook.com
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 7997
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;facebook.com.          IN  A

;; ANSWER SECTION:
facebook.com.       184 IN  A   69.171.230.68

;; Query time: 0 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Sat May 28 10:05:22 2016
;; MSG SIZE  rcvd: 46&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In the first case, where in you are using application level caching, DNS request should not be sent at all, i.e. we would have to monitor the DNS traffic and confirm its absence. &lt;/p&gt;

&lt;p&gt;We can simply use &lt;a href=&quot;http://www.tcpdump.org/&quot;&gt;TCPDump&lt;/a&gt; for this purpose.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tcpdump -s 0 -l -n port 53&lt;/code&gt; will give the all DNS traffic. For example in my 
executing &lt;code&gt;dig facebook.com&lt;/code&gt; gives the following traffic:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on eth0, link-type EN10MB (Ethernet), capture size 65535 bytes
10:03:26.061650 IP 205.147.100.85.53967 &amp;gt; 192.54.112.30.domain: 30692% [1au] A? facebook.com. (41)
10:03:26.206708 IP 192.54.112.30.domain &amp;gt; 205.147.100.85.53967: 30692- 0/6/5 (649)
10:03:26.207148 IP 205.147.100.85.53067 &amp;gt; 69.171.255.12.domain: 10866% [1au] A? facebook.com. (41)
10:03:26.207348 IP 205.147.100.85.35076 &amp;gt; 192.31.80.30.domain: 62038% [1au] NS? facebook.com. (41)
10:03:26.290949 IP 69.171.255.12.domain &amp;gt; 205.147.100.85.53067: 10866*- 1/2/4 A 69.171.230.68 (169)
10:03:26.291306 IP 205.147.100.85.35719 &amp;gt; 192.54.112.30.domain: 13554% [1au] DS? facebook.com. (41)
10:03:26.423309 IP 192.31.80.30.domain &amp;gt; 205.147.100.85.35076: 62038- 0/6/5 (649)
10:03:26.423732 IP 205.147.100.85.13121 &amp;gt; 69.171.255.12.domain: 14660% [1au] NS? facebook.com. (41)
10:03:26.424027 IP 205.147.100.85.28055 &amp;gt; 69.171.239.12.domain: 58880% [1au] AAAA? a.ns.facebook.com. (46)
10:03:26.424211 IP 205.147.100.85.15049 &amp;gt; 69.171.255.12.domain: 29662% [1au] A? b.ns.facebook.com. (46)
10:03:26.424305 IP 205.147.100.85.33030 &amp;gt; 69.171.255.12.domain: 45018% [1au] AAAA? b.ns.facebook.com. (46)
10:03:26.424402 IP 205.147.100.85.42614 &amp;gt; 69.171.255.12.domain: 51358% [1au] A? a.ns.facebook.com. (46)
10:03:26.435590 IP 192.54.112.30.domain &amp;gt; 205.147.100.85.35719: 13554*- 0/6/1 (762)
10:03:26.512147 IP 69.171.255.12.domain &amp;gt; 205.147.100.85.13121: 14660*- 2/0/4 NS a.ns.facebook.com., NS b.ns.facebook.com. (153)
10:03:26.513377 IP 69.171.255.12.domain &amp;gt; 205.147.100.85.33030: 45018*- 1/2/3 AAAA 2a03:2880:ffff:c:face:b00c:0:35 (153)
10:03:26.513398 IP 69.171.255.12.domain &amp;gt; 205.147.100.85.15049: 29662*- 1/2/3 A 69.171.255.12 (153)
10:03:26.520676 IP 69.171.239.12.domain &amp;gt; 205.147.100.85.28055: 58880*- 1/2/3 AAAA 2a03:2880:fffe:c:face:b00c:0:35 (153)
10:03:26.525315 IP 69.171.255.12.domain &amp;gt; 205.147.100.85.42614: 51358*- 1/2/3 A 69.171.239.12 (153)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In case of successful caching, no traffic should be observed from the application.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Things to learn for Modern Web Development</title>
   <link href="http://madhur.co.in/blog/2016/05/14/things-learn-modern-web-development.html"/>
   <updated>2016-05-14T00:00:00+05:30</updated>
   <id>id:/blog/2016/05/14/things-learn-modern-web-development</id>
   <content type="html">&lt;p&gt;Almost 4 years ago, I wrote a blog post called &lt;a href=&quot;/blog/2012/02/15/futurewebmobile.html&quot;&gt;Future of Web and Mobile: HTML5, CSS3 and Javascript&lt;/a&gt;, wherein I mentioned emergence of Javascript and explosion of Javascript frameworks such as &lt;a href=&quot;http://jquery.com/&quot;&gt;Jquery&lt;/a&gt;, &lt;a href=&quot;http://knockoutjs.com/&quot;&gt;Knockout&lt;/a&gt; etc...&lt;/p&gt;

&lt;p&gt;Fast forward to now, I see modern web development again going through a overwhelming change. There is tons of information out there which can be very confusing especially for beginners. The prime reason is there are new frameworks coming up such as &lt;a href=&quot;https://angular.io/&quot;&gt;Angular 2&lt;/a&gt; and &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;ReactJs&lt;/a&gt; which make use of &lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;EcmaScript 6&lt;/a&gt; features which is yet not fully finalized. And then there are more tools to convert your &lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6&lt;/a&gt; code to plain old javascript a.k.a &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript&quot;&gt;ES5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am outlining series of programming language/tools in a sequence which should be learnt to understand the overwhelming and fast changing modern web development.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;Javascript&lt;/a&gt;&lt;br&gt;
This is the one and only language understood by all the browsers and it is the backbone of front end development. It is also referred to as ECMAScript, ES 5.
It is essential to have good grasp of this programming language before going any further. &lt;a href=&quot;https://www.youtube.com/watch?v=v2ifWcnQs6M&quot;&gt;This&lt;/a&gt; video is gold.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6&lt;/a&gt;&lt;br&gt;
This is an extension of Javascript language which is being implemented by many browsers. The good thing is you can start writing ES6 code even now, because there are transpilers available such as &lt;a href=&quot;&quot;&gt;Babel&lt;/a&gt; to convert your ES6 code to ES5 code. It is good to go through these and get a sense of what are the new features. Don&amp;#39;t go too much deep because they are subject to change.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt;&lt;br&gt;
This is one of the most popular ES6 to ES5 transpiler. It is also recommended by many frameworks such as React. To convert the ES6 to ES5 code in realtime, there is a REPL available at &lt;a href=&quot;https://babeljs.io/repl/&quot;&gt;https://babeljs.io/repl/&lt;/a&gt;.&lt;br&gt;
Note that Babel just not ES6 to ES5 transpiler. It is also JSX to JavaScript transpiler. What is JSX? Read on below.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;NodeJs&lt;/a&gt;&lt;br&gt;
NodeJs is a server side platform which allows you to build your backend in JavaScript language. Why I am mentioning it here? Because, even if you are not interested in bakend development, there is lot of front tooling which depends on NodeJs. It is good to get atleast familar with node and its command line tools.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt;&lt;br&gt;
NPM is the package manager for node. It is just like &lt;a href=&quot;https://pypi.python.org/pypi/pip&quot;&gt;pip&lt;/a&gt; for Python, &lt;a href=&quot;https://rubygems.org/&quot;&gt;ruby gems&lt;/a&gt; for Ruby and &lt;a href=&quot;https://maven.apache.org/&quot;&gt;Maven&lt;/a&gt; for Java. Learn how to install/remove/upgrade packages and especially &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;package.json&lt;/a&gt; file structure.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; or &lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;&lt;br&gt;
These are two most popular task runners available which run on Node platform. Technically, they are packages for npm. They allow you to automate many mundane frontend tasks such as Linting your source files, concatenating, minifying and deploying and much much more .... &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt;&lt;br&gt;
It is a package management tool for frontend libraries itself. Want to add Jquery to your application? As easy as using &lt;code&gt;bower install jquery&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The knowledge of above tools is enough for any basic front end development. I will cover the tools for two most popular frameworks &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt; and &lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt; below. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;ReactJs&lt;/a&gt;&lt;br&gt;
It is the most popular frontend library to build your views. Note that it is only a V in MVC and hence no comparison should be made with frameworks such as Angular. ReactJs is written in ES6 and can be transpiled to ES5 with Babel. It also uses &lt;a href=&quot;https://jsx.github.io/&quot;&gt;JSX&lt;/a&gt; which is also transpiled to Javascript using Babel.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://webpack.github.io/&quot;&gt;WebPack&lt;/a&gt; or &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt;&lt;br&gt;
These are 2 most popular module bundlers. They can take your Js source code, identify right dependencies and emit a single Javascript file which can power your entire application. I prefer Webpack. Have a look at this &lt;a href=&quot;https://github.com/petehunt/webpack-howto&quot;&gt;WebPack how to&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/flux/&quot;&gt;Flux&lt;/a&gt; or &lt;a href=&quot;http://redux.js.org/index.html&quot;&gt;Redux&lt;/a&gt;&lt;br&gt;
React components are arranged in a hierarchy. Most of the time, your data model also follows a hierarchy. In these situations Flux doesn’t buy you much. Sometimes, however, your data model is not hierarchical. When your React components start to receive props that feel extraneous, or you have a small number of components starting to get very complex, then you might want to look into Flux.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;Immutable.js&lt;/a&gt;&lt;br&gt;
Immutable.js provides a set of data structures that can help to solve certain performance issues when building React apps. It&amp;#39;s a great library, and you&amp;#39;ll probably use it a lot in your apps moving forward, but it&amp;#39;s completely unnecessary until you have an appreciation of the performance implications.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://angular.io/&quot;&gt;Angular 2&lt;/a&gt;&lt;br&gt;
Angualr 2 is the next version of one of the most popular MVC framework for Javascript. It is completely re-designed and has a steep learning curve. Comes with full support of two way data binding. Careful evalaution need to be made if Angular2 is the right choice for the development. Its not released for production as of writing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;&lt;br&gt;
Angular 2 recommends the user of Typescript as its choice of programming language. I am not very familar with TypeScript but I guess it adds static type to the dynamic nature of Javascript. In the end, I am sure its just a transpiler.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;Service workers&lt;/a&gt;&lt;br&gt;
Experimental API. Its like a background thread available to you in a browser for doing all sorts of work. I guess it also adds support for offline browsing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt; and &lt;a href=&quot;https://developers.google.com/web/updates/2015/03/push-notifications-on-the-open-web&quot;&gt;Push API&lt;/a&gt;&lt;br&gt;
Read on the links. I have little idea about these as of now.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Read Google docs spreadsheet using Python</title>
   <link href="http://madhur.co.in/blog/2016/05/13/google-docs-spreadsheet.html"/>
   <updated>2016-05-13T00:00:00+05:30</updated>
   <id>id:/blog/2016/05/13/google-docs-spreadsheet</id>
   <content type="html">&lt;p&gt;One of the many useful and productive feature for me personally is to programmatically read a Google docs spreadsheet in Python. This is very useful to automate a task to insert some data in MySQL/NOSQL/ElasticSearch, which would have otherwise required to build a custom user interface for data input.&lt;/p&gt;

&lt;p&gt;Reading is actually quite simple. For example, you have a spreadsheet like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Blog/spreadsheet.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;First, you need to grab the file id. In the image below, file id is 
&lt;code&gt;19Y_Oi5_riecwonPbtxN4sfDntZO62s_vJbXoogFFp9o&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Blog/spreadsheet_url.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Make sure to give the read permission to anyone having the link, otherwise our python program won&amp;#39;t be able to read the file.&lt;/p&gt;

&lt;p&gt;First, we make a simple &lt;code&gt;GET&lt;/code&gt; request on the export url of the spreadhseet using the &lt;a href=&quot;http://docs.python-requests.org/en/master/&quot;&gt;requests&lt;/a&gt; module&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User-Agent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Mozilla/5.0 (Windows NT 6.2; WOW64; rv:22.0) Gecko/20100101 Firefox/22.0&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DNT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accept&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accept-Encoding&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;deflate&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accept-Language&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;en-US,en;q=0.5&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;file_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;19Y_Oi5_riecwonPbtxN4sfDntZO62s_vJbXoogFFp9o&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://docs.google.com/spreadsheets/d/{0}/export?format=csv&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once we have the response, it is easy to read it using the &lt;a href=&quot;https://docs.python.org/2/library/csv.html&quot;&gt;csv&lt;/a&gt; module&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;sio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StringIO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dialect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;excel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Do something with each row&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For example, to read the data as a dictionary, we can do something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will print the following output on console:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{'Col C': '3', 'Col B': '2', 'Col A': '1', 'Col D': '4'}
{'Col C': '2', 'Col B': '3', 'Col A': '4', 'Col D': '1'}
{'Col C': '2', 'Col B': '4', 'Col A': '3', 'Col D': '1'}
{'Col C': '3', 'Col B': '4', 'Col A': '2', 'Col D': '1'}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Incase, we are using unicode characters with our file. We can make use of &lt;a href=&quot;https://pypi.python.org/pypi/unicodecsv&quot;&gt;unicodecsv&lt;/a&gt; module. It is a drop in replacement of the &lt;code&gt;csv&lt;/code&gt; module.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;unicodecsv&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;csv&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The complete program is given in this &lt;a href=&quot;https://gist.github.com/madhur/13ef5a810d495e9c638232263ea49fd5&quot;&gt;gist&lt;/a&gt; and as well as below. You just need to replace the &lt;code&gt;file_id&lt;/code&gt; parameter to start using it. Feel free to fork it :)&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/madhur/13ef5a810d495e9c638232263ea49fd5.js&quot;&gt;&lt;/script&gt;
</content>
 </entry>
 
 <entry>
   <title>Handling special characters in Python 2</title>
   <link href="http://madhur.co.in/blog/2016/04/25/handling-special-characters-python.html"/>
   <updated>2016-04-25T00:00:00+05:30</updated>
   <id>id:/blog/2016/04/25/handling-special-characters-python</id>
   <content type="html">&lt;p&gt;Recently, we implemented a method in Python to send push notifications to users.&lt;/p&gt;

&lt;p&gt;In some of the cases, the notification was being received like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Blog/notif1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;This was due to specially encoded UTF-8 characters, which we were not handling in Python.&lt;/p&gt;

&lt;p&gt;Typically, whenever your Python source encounters a UTF-8 character, you get the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SyntaxError: Non-ASCII character in file on line&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For example, try out this program:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'India’s escalating water crisis'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here we have a UTF-8 chracter &lt;code&gt;’&lt;/code&gt; in the string. Running this program will result in :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SyntaxError: Non-ASCII character &amp;#39;\xe2&amp;#39; in file pychar.py on line 3, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As the error suggests, the first step is to declare encoding on top of file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;# encoding: utf-8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Hence,the program becomes:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# encoding: utf-8&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'India’s escalating water crisis'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, the program will happily print out the string in the output.&lt;/p&gt;

&lt;p&gt;Apart from that,  it is also helpful to know that in python, these utf8 characters can be represented in both encoded and decoded forms.&lt;/p&gt;

&lt;p&gt;For example, if I slightly modify my program as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# encoding: utf-8&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'India’s escalating water crisis'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'unicode_escape'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The output becomes,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Indiaâs escalating water crisis&lt;/code&gt;
&lt;code&gt;&amp;quot;India\u00e2\u0080\u0099s escalating water crisis&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here the characters have been represented in escaped forms. This is good for internal representation , but not something you want when you want to transfer the text for push notification to mobile devices or web pages.&lt;/p&gt;

&lt;p&gt;In case, you want to completely strip out the special characters:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# encoding: utf-8&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'India’s escalating water crisis'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'unicode_escape'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ignore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The output is:
&lt;code&gt;Indias escalating water crisis&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Notice in the output above, the apostophe character has been trimmed.&lt;/p&gt;

&lt;p&gt;Using this knowledge, we are able to send notifications which contain all special characters:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Blog/notif2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Making AngularJs play nice with Social sharing</title>
   <link href="http://madhur.co.in/blog/2016/04/09/making-angular-play-nice-with-social-sharing.html"/>
   <updated>2016-04-09T00:00:00+05:30</updated>
   <id>id:/blog/2016/04/09/making-angular-play-nice-with-social-sharing</id>
   <content type="html">&lt;p&gt;Recently, We were designing a mobile web view for the news article shared on the app. I simply choose AngularJs for the ease of use and flexibility it provies.&lt;/p&gt;

&lt;p&gt;However, after complete implementation. When someone tried to share the story on Facebook, we saw this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Blog/angular1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;This happens because of social media sites like &lt;a href=&quot;&quot;&gt;Facebook&lt;/a&gt; do not evalaute Javascript while fetching the meta tags. In our case, the meta tags were defined like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-bind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ data.caption }}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ data.xImage}}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ data.caption }}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We were relying on Angular&amp;#39;s interpolation to evaluate the meta tags which didn&amp;#39;t work since AngularJs is entirely executed on client side. This caused facebook to show raw values i.e. 
``&lt;/p&gt;

&lt;p&gt;To solve this problem, we moved the meta tags evaluation to server side. Since we were using Java stack along with Spring, it was easy to do so. We made sure that our HTML markup was filtered through JSP tags. It was as easy as adding these directives on top of page:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%@ page isELIgnored=&quot;false&quot; %&amp;gt;
&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=ISO-8859-1&quot;
         pageEncoding=&quot;ISO-8859-1&quot;%&amp;gt;
&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot; %&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now with JSTL tags in place, we replaced the meta tags with JPS tags:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;c:out&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${title}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/c:out&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;c:out value=&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/c:out&amp;gt;&lt;/span&gt;&quot; /&amp;gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;c:out value=&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/c:out&amp;gt;&lt;/span&gt;&quot; /&amp;gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;c:out value=&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/c:out&amp;gt;&lt;/span&gt;&quot; /&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Before returning the JSP page through an API call, we evaluated these meta tags on the server side itself:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/view/{newsId}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getNews&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@PathVariable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;newsId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelMap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;NewsArticlesV2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newsArticlesV2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newsServiceV2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getByExternalId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newsArticlesV2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getArticleTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newsArticlesV2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNewsContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newsArticlesV2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setContentType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;slug&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;request&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;webforms/news&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And the result becomes:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Blog/angular2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Understanding free output in Linux</title>
   <link href="http://madhur.co.in/blog/2016/04/08/understanding-free-output.html"/>
   <updated>2016-04-08T00:00:00+05:30</updated>
   <id>id:/blog/2016/04/08/understanding-free-output</id>
   <content type="html">&lt;p&gt;If you are managing Linux machines daily like me, its important to understnad the output of &lt;code&gt;free&lt;/code&gt; command, which shows the free system memory.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[root@localhost vagrant]# free
              total        used        free      shared  buff/cache   available
Mem:        5824332     2292284     1155732      132980     2376316     3087844
Swap:        839676       18172      821504
[root@localhost vagrant]#&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;free -g&lt;/code&gt; is much more helpful instead&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[root@localhost vagrant]# free -g
              total        used        free      shared  buff/cache   available
Mem:              5           2           1           0           2           2
Swap:             0           0           0
[root@localhost vagrant]#&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Some flavours of linux might output in this format:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;             total       used       free     shared    buffers     cached
Mem:            62         46         16          0          0         10
-/+ buffers/cache:         35         27
Swap:            0          0          0
-----------------------------&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;total - Your total, physical (assuming no virtualization) memory&lt;/li&gt;
&lt;li&gt;used - How much of that is currently used (by anything)&lt;/li&gt;
&lt;li&gt;free - How much of that is completely free (not used at all)&lt;/li&gt;
&lt;li&gt;shared - (never anything there, ignore that column)&lt;/li&gt;
&lt;li&gt;buffers - Memory used by kernel buffers&lt;/li&gt;
&lt;li&gt;cached - Memory used for cache&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essentially, the figures which we should be focussing on is &lt;code&gt;-/+ buffers/cache&lt;/code&gt; which excludes the used buffer.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>On calling your former employers shit</title>
   <link href="http://madhur.co.in/blog/2016/04/08/calling-former-employers-shit.html"/>
   <updated>2016-04-08T00:00:00+05:30</updated>
   <id>id:/blog/2016/04/08/calling-former-employers-shit</id>
   <content type="html">&lt;p&gt;Do you call your past employers shit ?&lt;/p&gt;

&lt;p&gt;if yes, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;its an insult to all the leaders who have guided you&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;its an insult to the time you have spent working in the past&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;its an insult to YOU.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essentially, its an insult to whatever you are today. Whatever you are today, its because of them.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>NSImage Caching</title>
   <link href="http://madhur.co.in/blog/2016/01/25/using-ns-image.html"/>
   <updated>2016-01-25T00:00:00+05:30</updated>
   <id>id:/blog/2016/01/25/using-ns-image</id>
   <content type="html">&lt;p&gt;Recently, I encountered an issue where an &lt;code&gt;NSImage&lt;/code&gt; instance was cached inspite of setting &lt;code&gt;NSImageCacheMode.Never&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Specifically, the issue was:&lt;br&gt;
I have bunch of images in my assets. What I am trying to do is render the image in status bar of OSX as following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;icon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;statusIcon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;statusItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;statusItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statusMenu&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and also using it in one of my view which opens:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dayIcon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;statusIcon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The problem is as soon as I set the status bar image, the image in the view also changes, i.e. both the color and the size(changes to 18x18)&lt;/p&gt;

&lt;p&gt;I have tried using &lt;code&gt;icon?.cacheMode = NSImageCacheMode.Never&lt;/code&gt; but there is no effect.&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;[NSImage imageNamed:]&lt;/code&gt; may return an existing cached instance of the image.&lt;/p&gt;

&lt;p&gt;They are not, and that is, indeed, your problem.&lt;/p&gt;

&lt;p&gt;If you want to change the size on the image without affecting anyone else who may be holding a reference, make a copy of it. The copy of the NSImage is lightweight - it doesn&amp;#39;t duplicate the underlying image representations which hold the rendering (bitmap, in the PNG case) data.&lt;/p&gt;

&lt;p&gt;This is the correct code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;icon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;statusIcon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as!&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSImage&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;statusItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;statusItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statusMenu&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Google groups for Developers</title>
   <link href="http://madhur.co.in/blog/2016/01/03/google-groups-developers.html"/>
   <updated>2016-01-03T00:00:00+05:30</updated>
   <id>id:/blog/2016/01/03/google-groups-developers</id>
   <content type="html">&lt;p&gt;Back in the old days, &lt;a href=&quot;https://en.wikipedia.org/wiki/Usenet&quot;&gt;Usenet&lt;/a&gt; used to be a central place for discussion among developers. It is still in use these days, however its fading away fast. &lt;a href=&quot;https://en.wikipedia.org/wiki/Linus_Torvalds&quot;&gt;Linus&lt;/a&gt; announced its development of &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux&quot;&gt;Linux&lt;/a&gt; on &lt;a href=&quot;https://groups.google.com/forum/#!topic/comp.os.minix/dlNtH7RRrGA%5B1-25%5D&quot;&gt;this thread on comp.os.minux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most of the usenet groups are now archived in &lt;a href=&quot;https://support.google.com/groups/answer/6003482?hl=en&quot;&gt;Google groups&lt;/a&gt;. The discussion landscape is now scattered. There are &lt;a href=&quot;https://groups.google.com/forum/#!overview&quot;&gt;Google groups&lt;/a&gt;, &lt;a href=&quot;http://forum.xda-developers.com/&quot;&gt;XDA Forums&lt;/a&gt; for mobiles and &lt;a href=&quot;http://stackoverflow.com/&quot;&gt;Stackoverflow&lt;/a&gt; and &lt;a href=&quot;http://stackexchange.com/&quot;&gt;other exchange sites&lt;/a&gt; for programming, mailing lists for &lt;a href=&quot;http://vger.kernel.org/vger-lists.html&quot;&gt;linux&lt;/a&gt; and &lt;a href=&quot;http://seclists.org/&quot;&gt;security&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below are some of my select resources for developers on &lt;a href=&quot;https://groups.google.com/forum/#!overview&quot;&gt;Google groups&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Java&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/akka-user&quot;&gt;Akka user list&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/asynchttpclient&quot;&gt;asynchttpclient&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/rxjava&quot;&gt;RxJava&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Android&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/android-building&quot;&gt;Android Building&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/android-platform&quot;&gt;Android Platform&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/adt-dev&quot;&gt;adt-dev&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/acra-discuss&quot;&gt;acra-discuss&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/facebook-for-android-beta-testers&quot;&gt;Facebook for Android Beta testers&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Javascript&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/backbonejs&quot;&gt;backbonejs&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/faye-users&quot;&gt;faye-users&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/firebug&quot;&gt;firebug&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/httpfiddler&quot;&gt;httpfiddler&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/reactjs&quot;&gt;ReactJs&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/nodejs&quot;&gt;nodejs&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/jquery-en&quot;&gt;Jquery&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/jstree&quot;&gt;JsTree&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Ruby / Python&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/jekyll-rb&quot;&gt;Jekyll&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/celery-users&quot;&gt;celery-users&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;AngularJs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/angular&quot;&gt;AngularJs&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/angular-cache&quot;&gt;angular-cache&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/angular-data&quot;&gt;angular-data&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Google&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/google-appengine&quot;&gt;Google App Engine&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/google-tasks-api&quot;&gt;Google Tasks API&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/google-visualization-api&quot;&gt;Google Visualization API&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/adsense-api&quot;&gt;Adsense API Forum&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Others&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/rabbitmq-discuss&quot;&gt;rabbitmq-discuss&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/rabbitmq-users&quot;&gt;rabbitmq-users&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/redis-db&quot;&gt;Redis&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/memcached&quot;&gt;memcached&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/stomp-spec&quot;&gt;Stomp&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/mongodb-user&quot;&gt;MongoDb User&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Managing Programmers By Douglas Crockford</title>
   <link href="http://madhur.co.in/blog/2015/12/27/managing-programmers.html"/>
   <updated>2015-12-27T00:00:00+05:30</updated>
   <id>id:/blog/2015/12/27/managing-programmers</id>
   <content type="html">&lt;p&gt;Just stumbled upon this great video by &lt;a href=&quot;https://en.wikipedia.org/wiki/Douglas_Crockford&quot;&gt;Douglas Crockford&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Must watch for anyone programming or/and managing programmers.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/NPlMcUxFOlY&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</content>
 </entry>
 
 <entry>
   <title>Timing function / task execution in Celery</title>
   <link href="http://madhur.co.in/blog/2015/12/14/timing-function-calls.html"/>
   <updated>2015-12-14T00:00:00+05:30</updated>
   <id>id:/blog/2015/12/14/timing-function-calls</id>
   <content type="html">&lt;p&gt;With one of our current project, I had to debug performance issues related to DNS resolution. A nasty networking issue was taking 5 seconds to resolve one of our internal DNS hostname. I wanted to time all the python functions and celery tasks. I wrote a &lt;code&gt;@timeit&lt;/code&gt; decorator that allows your to time the python function execution times.&lt;/p&gt;

&lt;p&gt;However, this decorator doesn&amp;#39;t work for celery tasks, since those functions are returned immediately. Instead, for celery, I used &lt;a href=&quot;http://docs.celeryproject.org/en/latest/userguide/signals.html#task-prerun&quot;&gt;&lt;code&gt;task_prerun&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://docs.celeryproject.org/en/latest/userguide/signals.html#task-postrun&quot;&gt;&lt;code&gt;task_postrun&lt;/code&gt;&lt;/a&gt; signals which are called before and after every task execution.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;celery.signals&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task_prerun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task_postrun&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@task_prerun.connect&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;task_prerun_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@task_postrun.connect&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;task_postrun_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;@timeit&lt;/code&gt; decorator&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;timeit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;timed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;te&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r (&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r) &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%2.2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f sec'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; \
              &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;te&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timed&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And here is the output looks like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;'get_followers' ((u'madhur',), {}) 1.42 sec
'prepare_message' (([], u'madhur', ([], [])), {}) 0.02 sec&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Ringtone Preference in Feed Notifier</title>
   <link href="http://madhur.co.in/blog/2015/12/06/notification-feed-notifier.html"/>
   <updated>2015-12-06T00:00:00+05:30</updated>
   <id>id:/blog/2015/12/06/notification-feed-notifier</id>
   <content type="html">&lt;p&gt;Just added the much needed notification ringtone preference to &lt;a href=&quot;https://play.google.com/store/apps/details?id=in.co.madhur.dashclockfeedlyextension&amp;amp;hl=en&quot;&gt;Feed Notifier&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now you can set your favorite notification sound to be played whenever you recieve a new notification.&lt;/p&gt;

&lt;p&gt;Head over to play store for an &lt;a href=&quot;https://play.google.com/store/apps/details?id=in.co.madhur.dashclockfeedlyextension&amp;amp;hl=en&quot;&gt;update&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Flexbox is not supported Android 4.3 and below</title>
   <link href="http://madhur.co.in/blog/2015/11/29/flexbox-not-supported.html"/>
   <updated>2015-11-29T00:00:00+05:30</updated>
   <id>id:/blog/2015/11/29/flexbox-not-supported</id>
   <content type="html">&lt;p&gt;One of our webview pages had a strange issue in production. We are using an angular component &lt;a href=&quot;https://github.com/rzajac/angularjs-slider&quot;&gt;angularjs-slider&lt;/a&gt; on one of our pages. On some of the devices, the width of this component was way lesser than we had defined in our code (around 90% of the width of page)&lt;/p&gt;

&lt;p&gt;More analysis revealed that the issue occurred on only pre-kitkat devices. The strange thing was that we were using other controls like normal &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;label&lt;/code&gt; but they were not affected. We tried every CSS tweak to solve this issue but no avail.&lt;/p&gt;

&lt;p&gt;And then, I stumbled upon this &lt;a href=&quot;https://github.com/driftyco/ionic/issues/998&quot;&gt;issue&lt;/a&gt;. Turned out that this issue was because of ionic framework. &lt;a href=&quot;http://ionicframework.com/&quot;&gt;Ionic framework&lt;/a&gt; by default uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes&quot;&gt;Flexible Box Layout Module&lt;/a&gt; called as &lt;code&gt;flex&lt;/code&gt; in short. As per &lt;a href=&quot;http://caniuse.com/#feat=flexbox&quot;&gt;this&lt;/a&gt; &lt;code&gt;flex&lt;/code&gt; is only supported on Android 4.4 and above.&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;p&gt;The solution was just a one line change where we override the &lt;code&gt;display&lt;/code&gt; property to &lt;code&gt;block&lt;/code&gt; instead of &lt;code&gt;flex&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item range range-item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;rzslider&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;rz-slider-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data.experience&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rz-slider-floor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;   &lt;span class=&quot;na&quot;&gt;rz-slider-text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; years&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rz-slider-min-lable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;1 year&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rz-slider-max-lable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10+ years&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rz-exp-silder-id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expSlider&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rz-slider-ceil=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;11&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/rzslider&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;changed to &lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item range range-item&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;display:block&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;rzslider&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;rz-slider-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data.experience&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rz-slider-floor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;   &lt;span class=&quot;na&quot;&gt;rz-slider-text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; years&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rz-slider-min-lable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;1 year&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rz-slider-max-lable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10+ years&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rz-exp-silder-id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expSlider&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rz-slider-ceil=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;11&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/rzslider&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</content>
 </entry>
 
 
</feed>